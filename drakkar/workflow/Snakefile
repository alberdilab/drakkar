import os
import gzip
import pandas as pd
from glob import glob

####
# Define config variables
####

configfile: "workflow/config.yaml"
WORKFLOW = config.get("workflow", None)
OUTPUT_DIR = config.get("output_dir", None)
READS_DIR = config.get("reads_dir", None)
PREPROCESS_DIR = config.get("preprocess_dir", None)
REFERENCE = config.get("reference", None)
CATALOGING_MODE = config["mode"].split(",") if "mode" in config else []

####
# Calculate optimal resources for computing
####
def calculate_file_sizes(folder):
    file_sizes = {}
    for file in os.listdir(folder):
        if file.endswith("1.fq.gz") or file.endswith(".fna"):
            filepath = os.path.join(folder, file)
            # Get file size in bytes and convert to megabytes
            size_mb = os.path.getsize(filepath) / (1024 ** 2)
            file_sizes[file] = size_mb
    return file_sizes

def calculate_file_size(filepath):
    file_size = os.path.getsize(filepath) / (1024 ** 2)
    return file_size

if WORKFLOW == "complete":
    rule all:
        input:
            "results/complete.txt"

    include: "rules/preprocessing.smk"
    include: "rules/cataloging.smk"
    include: "rules/annotation.smk"
    include: "rules/quantification.smk"

if WORKFLOW == "preprocessing":

    samples, = glob_wildcards(f"{READS_DIR}/{{sample}}_1.fq.gz")

    # Check if reference is provided
    USE_REFERENCE = REFERENCE not in [None, "None"]

    rule all:
        input:
            expand(f"{OUTPUT_DIR}/preprocessing/final/{{sample}}_1.fq.gz", sample=samples),
            expand(f"{OUTPUT_DIR}/preprocessing/final/{{sample}}_2.fq.gz", sample=samples),
            *([expand(f"{OUTPUT_DIR}/preprocessing/final/{{sample}}.bam", sample=samples)] if USE_REFERENCE else [])

    include: "rules/preprocessing.smk"

if WORKFLOW == "cataloging":

    samples, = glob_wildcards(f"{PREPROCESS_DIR}/{{sample}}_1.fq.gz")

    rule all:
        input:
            *([expand(f"{OUTPUT_DIR}/cataloging/bowtie2/{{sample}}/{{sample}}.bam", sample=samples)] if "individual" in CATALOGING_MODE else []),
            *([expand(f"{OUTPUT_DIR}/cataloging/bowtie2/all/{{sample}}.bam", sample=samples)] if "all" in CATALOGING_MODE else [])

    include: "rules/cataloging.smk"
